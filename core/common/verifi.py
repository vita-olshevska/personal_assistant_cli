# тут написаны функции верификации телефонных номеров и email
import re

# примеры нломеров в списке
# phone_list = [
#             '234556',
#             '   i87sj6796вкаи876',
#             '657483 6720267bh725294',
#             '+380665674521',
#             '  80970005647',
#             '+380667  778889',
#             '1010101010',
#             '11111111111',
#             '121212121212',
#             '0978884567',
#             '80667775566',
#             '380630051810'
#             ]

def phone_verifi(phone_num):
    """
    Функция принимает введённую строку и проверяет является ли она
    телефонным номером. Критерии проверки:
    - проверка на соответствие формату 380ХХХХХХХХХ
    - проверка на наличие букв
    - проверка на количество цифр после исключения символов:
        - 10 цифр, допускается, проверяется префикс '0' и форматируется (прибавляется +38)
        - 11 - допускается, проверяется префикс '80' и форматируется (прибавляется +3)
        - 12 - допускается, проверяется префикс '380' и форматируется (прибавляется +)
        - <> цифр - возвращает ошибку с указанием количества введеных цифр и
        желаемого формата номера '380ХХХХХХХХХ'
    Возвращает кортеж с 2-мя элементами:
    - если номер в отформатированном виде удовлетворяет критериям проверки
    то кортеж вида ('380ХХХХХХХХХ', None)
    - если не удовлетворяет то вида (None, 'описание ошибки для юзера')
    """

    # удаление символов
    clean_phone_num = re.sub(r'\D', '', phone_num)
    # проверка количества цифр
    for i in range(10,13):
        preffix = '380'
        if len(clean_phone_num) == i:
            # проверка префикса номера
            if clean_phone_num.startswith(preffix[12 - i:len(preffix)]):
            # форматирование номера если удовлетворительное количество
            # цифр от 10 до 12
                verifi_phone_num = preffix[0:(12 - i)] + clean_phone_num
                return (verifi_phone_num, None)
            else:
                return (None, 'Введите номер в формате 38ХХХХХХХХХХ')
        elif len(clean_phone_num) < 10 or len(clean_phone_num) > 12:
            return (None, 'Количество цифр в ведённом номере не \
соответствует форме, введите пожалуйста согласно формату 38ХХХХХХХХХХ')


for i in phone_list:
    print(phone_verifi(i))

mail_ex = []

def email_verifi(email):
    """
    Функция принимает строку - email.
    Возвращает или готовій email для внесения в БД или описание ошибки при
    вводе. Критерии проверки:
    - наличие в строке 1-го символа '@';
    - символы перед '@' не должны содержать пробелов и состоять только из букв
    английского алфавита, цифр и символов: '.', '_', длинной не менее 1 символа
    (исключая '.', '_')
    - символы после '@' не должны содержать пробелов и должы состоять только
    из букв английского алфавита и цифр, заканчиваться символом '.'
    - после символа '.' только буквы английского алфавита в количестве от 2 до 3.
    """
    clean_email = 1
    pass

for i in mail_ex:
    print(email_verifi(i))
